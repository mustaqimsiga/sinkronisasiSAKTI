-- FILE: merge_output_span_sakti.sql
-- PURPOSE: merge CVR002 dan OUTPUT ke ADM_R_OUTPUT

MERGE INTO ADM_R_OUTPUT SAKTI USING (
-- <!-- TRANSLATE SPAN FIELD_NAMES INTO SAKTI FIELD_NAMES
  SELECT
    NVL2(SPAN_CVR002_OUTPUT.FLEX_VALUE,SUBSTR(SPAN_CVR002_OUTPUT.FLEX_VALUE,5,3),SAKTI_OUTPUT.KODE) KODE,
    NVL2(SPAN_CVR002_OUTPUT.FLEX_VALUE,CASE WHEN SPAN_OUTPUT.ENABLED_FLAG = 'Y' THEN 0 ELSE 1 END, 1) DELETED,
    NVL2(SPAN_CVR002_OUTPUT.FLEX_VALUE,SPAN_CVR002_OUTPUT.DESCRIPTION,SAKTI_OUTPUT.DESKRIPSI) DESKRIPSI,
    NVL2(SPAN_CVR002_OUTPUT.FLEX_VALUE,SPAN_CVR002_OUTPUT.ATTRIBUTE1,SAKTI_OUTPUT.KODE_KEGIATAN) KODE_KEGIATAN,
    NVL2(SPAN_CVR002_OUTPUT.FLEX_VALUE,SPAN_CVR002_OUTPUT.ATTRIBUTE4,SAKTI_OUTPUT.SATUAN) SATUAN
-- TRANSLATE -->
  FROM (
    SELECT SPAN_OUTPUT.FLEX_VALUE,
      SPAN_OUTPUT.ENABLED_FLAG,
      SPAN_OUTPUT.DESCRIPTION,
      SPAN_OUTPUT.ATTRIBUTE1, -- KEGIATAN
      SPAN_OUTPUT.ATTRIBUTE4 -- SATUAN
    FROM (
      SELECT SUBSTR(CONCATENATED_SEGMENTS_LOW,12,7) SPAN_OUTPUT_FLEX_VALUE
      FROM APPS.FND_FLEX_VALIDATION_RULE_LINES@SPAN_ST
      WHERE FLEX_VALIDATION_RULE_NAME                 = 'CVR002'
      AND INCLUDE_EXCLUDE_INDICATOR                   = 'I'
      AND ENABLED_FLAG                                = 'Y'
      AND SUBSTR(CONCATENATED_SEGMENTS_LOW,7,2) NOT  IN ('ZZ','00') -- SPAN_DFF_ESELON_ONE
      AND SUBSTR(CONCATENATED_SEGMENTS_LOW,9,2) NOT  IN ('ZZ','00') -- SPAN_DFF_PROGRAM
      AND SUBSTR(CONCATENATED_SEGMENTS_LOW,12,4) NOT IN ('ZZZZ', '0000') -- SPAN_DFF_GIAT
      AND SUBSTR(CONCATENATED_SEGMENTS_LOW,16,3) NOT IN ('ZZZ', '000') -- SPAN_DFF_OUTPUT
      ) SPAN_CVR002
    LEFT JOIN (
      SELECT FFV.FLEX_VALUE,
        FFV.ENABLED_FLAG,
        FFVT.DESCRIPTION,
        FFV.ATTRIBUTE1, -- KEGIATAN
        FFV.ATTRIBUTE4 -- SATUAN
      FROM FND_FLEX_VALUES@SPAN_ST FFV
  	  LEFT JOIN FND_FLEX_VALUE_SETS@SPAN_ST FFVS
  	    ON FFV.FLEX_VALUE_SET_ID = FFVS.FLEX_VALUE_SET_ID
        LEFT JOIN FND_FLEX_VALUES_TL@SPAN_ST FFVT
          ON FFV.FLEX_VALUE_ID          = FFVT.FLEX_VALUE_ID
      WHERE FFVS.FLEX_VALUE_SET_NAME = 'SPAN_OUTPUT'
        AND FFV.SUMMARY_FLAG         = 'N'
        AND FFVT.LANGUAGE            = 'IN'
      ) SPAN_OUTPUT ON SPAN_CVR002.SPAN_OUTPUT_FLEX_VALUE = SPAN_OUTPUT.FLEX_VALUE
    WHERE SPAN_OUTPUT.ENABLED_FLAG IS NOT NULL
  ) SPAN_CVR002_OUTPUT
  FULL OUTER JOIN ADM_R_OUTPUT SAKTI_OUTPUT
  	ON SAKTI_OUTPUT.KODE = SPAN_CVR002_OUTPUT.FLEX_VALUE
) SPAN_SAKTI ON (SPAN_SAKTI.FLEX_VALUE = SAKTI.KODE)

WHEN MATCHED THEN
  UPDATE
  SET SAKTI.DESKRIPSI      = SPAN_SAKTI.DESKRIPSI,
    SAKTI.DELETED          = SPAN_SAKTI.DELETED,
    SAKTI.SATUAN           = SPAN_SAKTI.SATUAN,
    SAKTI.MODIFIED_DATE    = SYSDATE 
WHEN NOT MATCHED THEN
  INSERT
    (
      KODE,
      DESKRIPSI,
      DELETED,
      ACTIVE_DATE,
      INACTIVE_DATE,
      MODIFIED_BY,
      MODIFIED_DATE,
      VERSION,
      ACTIVE,
      SATUAN,
      KODE_KEGIATAN
    )
    VALUES
    (
      SPAN_SAKTI.KODE,
      SPAN_SAKTI.DESKRIPSI,
      SPAN_SAKTI.DELETED,
      SYSDATE, -- ACTIVE_DATE
      SYSDATE+10000, -- INACTIVE_DATE
      'SYNC', -- MODIFIED_BY
      SYSDATE, -- MODIFIED_DATE
      0, -- VERSION
      1, -- ACTIVE
      SPAN_SAKTI.SATUAN,
      SPAN_SAKTI.KODE_KEGIATAN
); 
